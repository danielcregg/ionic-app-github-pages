name: Deploy Ionic PWA to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract repository name
        run: echo "REPO_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      - name: Find Ionic project directory
        id: find-ionic
        run: |
          APP_PATH=$(find . -type f -name ionic.config.json -exec dirname {} \; | head -n 1)
          if [ -z "$APP_PATH" ]; then
            APP_PATH="."
          fi
          echo "APP_PATH=$APP_PATH" >> $GITHUB_ENV

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: |
          cd $APP_PATH
          npm ci

      - name: Install Ionic CLI
        run: npm install -g @ionic/cli

      - name: Install Angular CLI
        run: npm install -g @angular/cli

      - name: Check if PWA is already configured
        run: |
          cd $APP_PATH
          if grep -q '"serviceWorker": true' angular.json; then
            echo "PWA_ALREADY_CONFIGURED=true" >> $GITHUB_ENV
          else
            echo "PWA_ALREADY_CONFIGURED=false" >> $GITHUB_ENV
          fi

      - name: Check if app is standalone
        run: |
          cd $APP_PATH
          if grep -q 'bootstrapApplication' src/main.ts; then
            echo "IS_STANDALONE=true" >> $GITHUB_ENV
          else
            echo "IS_STANDALONE=false" >> $GITHUB_ENV
          fi

      - name: Add PWA support if not configured
        if: ${{ env.PWA_ALREADY_CONFIGURED == 'false' }}
        run: |
          cd $APP_PATH
          npx ng add @angular/pwa@latest --project app --force --skip-confirmation || true

      - name: Adjust standalone configuration if needed
        if: ${{ env.IS_STANDALONE == 'true' }}
        run: |
          cd $APP_PATH
          if ! grep -q '"serviceWorker": true' angular.json; then
            sed -i 's|"outputHashing": "all"|&,\n          "serviceWorker": true|' angular.json
          fi
          if ! grep -q 'provideServiceWorker(' src/main.ts; then
            if ! grep -q '@angular/service-worker' src/main.ts; then
              sed -i '1i import { provideServiceWorker } from "@angular/service-worker";' src/main.ts
            fi
            sed -i "/providers: \[/ s/\[/[provideServiceWorker('ngsw-worker.js', { enabled: environment.production }), /" src/main.ts
          fi

      - name: Ensure manifest.webmanifest in project
        run: |
          cd $APP_PATH
          if [ ! -f "src/manifest.webmanifest" ]; then
            echo "src/manifest.webmanifest not found. Creating a default manifest."
            echo '{
              "name": "My Ionic PWA",
              "short_name": "IonicPWA",
              "start_url": "/${REPO_NAME}/",
              "display": "standalone",
              "background_color": "#ffffff",
              "theme_color": "#1976d2",
              "icons": []
            }' > src/manifest.webmanifest
          fi

          if ! grep -q "src/manifest.webmanifest" angular.json; then
            if ! command -v jq > /dev/null; then
              sudo apt-get update && sudo apt-get install -y jq
            fi
            jq '.projects.app.architect.build.options.assets += ["src/manifest.webmanifest"]' angular.json > angular_modified.json
            mv angular_modified.json angular.json
          fi

      - name: Build the Ionic PWA
        run: |
          cd $APP_PATH
          ionic build --prod -- --base-href /${{ env.REPO_NAME }}/

      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          enablement: pages

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '${{ env.APP_PATH }}/www'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4